{"pageProps":{"worksData":{"id":"game-scheduler","contentHtml":"<h2>The Problem</h2>\n<p>A few of friends and I started playing poker regularly, but we were using Instagram chats to schedule games (I know, not the greatest idea). </p>\n<p>As the organizer of every game I would message a few dates, times and buy-in amounts and get people to like (vote) the options. Once everyone voted, I would count and announce the official date, time and buy-in amount and send reminders to the players throughout the week.</p>\n<blockquote>\n<p>This process became very tedious as we added more options and it was very repetitive. We needed a better solution.</p>\n</blockquote>\n<p>The first conclusion was to use a third-party polling app, but nearly all of the viable options required a paid subscription.\nOur requirements (adding options for a date, time, and buy-in and sending e-mails) were minimal and did not justify paying for the pricey services. </p>\n<p>This lead to my next conclusion.</p>\n<blockquote>\n<p>What if I could use this as a learning opportunity and develop an app that incorporates a microservice architecture? </p>\n</blockquote>\n<p>I have been keen on learning about microservices for quite a while and decided that this was a good opportunity to build a distributed system. </p>\n<blockquote>\n<h2>TLDR:</h2>\n<p>Problem: Scheduling poker games with friends via Instagram chats is very inefficient.<br>\nSolution: Let's create our own polling app that employs a microservice architecture! </p>\n</blockquote>\n<h2>Goal</h2>\n<p>Allow a user to create a poll that has options for dates, times and buy-in amounts and automatically remind participants through email notifications.</p>\n<h2>Research</h2>\n<h3>Requirements</h3>\n<ol>\n<li>Allow users to create an account and log in</li>\n<li>Allow an authenticated user to create a poll with date, time and buy-in amount options</li>\n<li>Allow the user to create a shareable link to send to players (for voting)</li>\n<li>Allow anonymous users to vote</li>\n<li>Allow anonymous users to optionally provide an email for notifications </li>\n<li>Send email notifications to players about the details of the game (i.e. one email for when the voting is finalized and another on the day of the game)</li>\n</ol>\n<h3>Design and Prototyping</h3>\n<p>After some research, I concluded that the following AWS resources will be required:</p>\n<ul>\n<li>Amazon Cognito - an authentication and authorization service</li>\n<li>Lambda - a service that lets us run code without provisioning or managing servers</li>\n<li>Cloud Watch Events - a service that provides \"real-time\" stream of system events that happen in AWS resources </li>\n<li>Simple Notification Service - a messaging service for application to application or application to person communication</li>\n<li>Simple Email Service - a service allows us to send emails</li>\n<li>GraphQL - a query langauge for developing APIs </li>\n<li>DynamoDb - a NoSQL database </li>\n<li>Amplify - a serverless framework that will help us glue these services together </li>\n</ul>\n<h2>Back-end Architecture:</h2>\n<p>I created a few iterations of the system architecture diagram and had some folks over in the Amazon Web Services discord server look over it. </p>\n<p><img src=\"/images/work/game-scheduler/architecture-white-bg.png\" alt=\"Alt Text\"></p>\n<h2>Low Fidelity Prototypes</h2>\n<img src=\"/images/work/game-scheduler/lf-1.jpg\" class=\"img-sm\" >\n<img src=\"/images/work/game-scheduler/lf-2.jpg\" class=\"img-sm\" >\n<img src=\"/images/work/game-scheduler/lf-3.jpg\" class=\"img-sm\" >\n","title":"Poker Game Scheduler","date":"2021-01","previewImage":"/images/work/game-scheduler/lead.png","description":"Create a poll to schedule a poker game and send email notifications.","tags":[],"category":""}},"__N_SSG":true}